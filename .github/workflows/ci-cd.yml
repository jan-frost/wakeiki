name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v2

    - name: Install dependencies
      run: |
        npm install -g elm
        npm install -g elm-test
        npm install -g elm-format
        npm install -g cordova
        yes | sdkmanager --licenses
        sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

    - name: Run elm-format
      working-directory: ./wakeiti-app
      run: elm-format --validate src/

    - name: Build Elm project
      working-directory: ./wakeiti-app
      run: elm make src/Main.elm --output=../www/elm.js

    - name: Run tests
      working-directory: ./wakeiti-app
      run: elm-test

    - name: Build Android app
      working-directory: ./wakeiti-app
      run: |
        cordova platform add android
        cordova build android

    - name: Run security audit
      working-directory: ./wakeiti-app
      run: npm audit

    - name: Upload APK artifact
      uses: actions/upload-artifact@v3
      with:
        name: app-debug
        path: wakeiti-app/platforms/android/app/build/outputs/apk/debug/app-debug.apk

  release:
    needs: build-and-test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Download APK artifact
      uses: actions/download-artifact@v3
      with:
        name: app-debug

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./app-debug.apk
        asset_name: app-debug.apk
        asset_content_type: application/vnd.android.package-archive
